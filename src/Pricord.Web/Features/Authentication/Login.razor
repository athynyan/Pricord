@page "/login"

@using Pricord.Contracts.Authentication

@using Pricord.Web.Features.Authentication.Services
@inject IAuthenticationService AuthenticationService

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<PageTitle>Login</PageTitle>

<h1>Login</h1>


<form>
    <label for="username">Username</label>
    <input type="text" id="username" @bind-value="username" />
    <label for="password">Password</label>
    <input type="password" id="password" @bind-value="password" />
    <button type="button" @onclick="LoginAsync">Login</button>
</form>

@if (isLoading && !isLogged)
{
    <p>Loading...</p>
}

@if (isLogged && !isLoading)
{
    <p>@user!.Id</p>
    <p>@user.Name</p>
    <p>@user.Email</p>
    <p>@user.Role</p>
    <p>@user.CreatedAt</p>
    <p>@user.LastModified</p>
}

@code 
{
    private UserDto? user;
    private bool isLogged = false;
    private bool isLoading = false;

    private string username = "";
    private string password = "";

    private async Task LoginAsync()
    {
        isLoading = true;
        var authenticationResult = await AuthenticationService.AuthenticateAsync(username, password);
        if (authenticationResult is not null)
        {
            isLogged = true;
            user = authenticationResult.User;
            ((JwtAuthenticationStateProvider) AuthenticationStateProvider)
                .NotifyUserAuthentication(authenticationResult.AccessToken);

            NavigationManager.NavigateTo("/");
        }
        isLoading = false;
    }
}
